// Mocks generated by Mockito 5.4.4 from annotations
// in apidash/test/services/hive_services_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:apidash/services/hive_services.dart' as _i3;
import 'package:hive_flutter/hive_flutter.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLazyBox_1<E> extends _i1.SmartFake implements _i2.LazyBox<E> {
  _FakeLazyBox_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HiveHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveHandler extends _i1.Mock implements _i3.HiveHandler {
  MockHiveHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<dynamic> get dataBox => (super.noSuchMethod(
        Invocation.getter(#dataBox),
        returnValue: _FakeBox_0<dynamic>(
          this,
          Invocation.getter(#dataBox),
        ),
      ) as _i2.Box<dynamic>);

  @override
  set dataBox(_i2.Box<dynamic>? _dataBox) => super.noSuchMethod(
        Invocation.setter(
          #dataBox,
          _dataBox,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Box<dynamic> get settingsBox => (super.noSuchMethod(
        Invocation.getter(#settingsBox),
        returnValue: _FakeBox_0<dynamic>(
          this,
          Invocation.getter(#settingsBox),
        ),
      ) as _i2.Box<dynamic>);

  @override
  set settingsBox(_i2.Box<dynamic>? _settingsBox) => super.noSuchMethod(
        Invocation.setter(
          #settingsBox,
          _settingsBox,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Box<dynamic> get environmentBox => (super.noSuchMethod(
        Invocation.getter(#environmentBox),
        returnValue: _FakeBox_0<dynamic>(
          this,
          Invocation.getter(#environmentBox),
        ),
      ) as _i2.Box<dynamic>);

  @override
  set environmentBox(_i2.Box<dynamic>? _environmentBox) => super.noSuchMethod(
        Invocation.setter(
          #environmentBox,
          _environmentBox,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Box<dynamic> get historyMetaBox => (super.noSuchMethod(
        Invocation.getter(#historyMetaBox),
        returnValue: _FakeBox_0<dynamic>(
          this,
          Invocation.getter(#historyMetaBox),
        ),
      ) as _i2.Box<dynamic>);

  @override
  set historyMetaBox(_i2.Box<dynamic>? _historyMetaBox) => super.noSuchMethod(
        Invocation.setter(
          #historyMetaBox,
          _historyMetaBox,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.LazyBox<dynamic> get historyLazyBox => (super.noSuchMethod(
        Invocation.getter(#historyLazyBox),
        returnValue: _FakeLazyBox_1<dynamic>(
          this,
          Invocation.getter(#historyLazyBox),
        ),
      ) as _i2.LazyBox<dynamic>);

  @override
  set historyLazyBox(_i2.LazyBox<dynamic>? _historyLazyBox) =>
      super.noSuchMethod(
        Invocation.setter(
          #historyLazyBox,
          _historyLazyBox,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<dynamic, dynamic> get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i4.Future<void> saveSettings(Map<dynamic, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSettings,
          [data],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setIds(List<String>? ids) => (super.noSuchMethod(
        Invocation.method(
          #setIds,
          [ids],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  dynamic getRequestModel(String? id) => super.noSuchMethod(Invocation.method(
        #getRequestModel,
        [id],
      ));

  @override
  _i4.Future<void> setRequestModel(
    String? id,
    Map<String, dynamic>? requestModelJson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRequestModel,
          [
            id,
            requestModelJson,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void delete(String? key) => super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> setEnvironmentIds(List<String>? ids) => (super.noSuchMethod(
        Invocation.method(
          #setEnvironmentIds,
          [ids],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  dynamic getEnvironment(String? id) => super.noSuchMethod(Invocation.method(
        #getEnvironment,
        [id],
      ));

  @override
  _i4.Future<void> setEnvironment(
    String? id,
    Map<String, dynamic>? environmentJson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setEnvironment,
          [
            id,
            environmentJson,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteEnvironment(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteEnvironment,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setHistoryIds(List<String>? ids) => (super.noSuchMethod(
        Invocation.method(
          #setHistoryIds,
          [ids],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  dynamic getHistoryMeta(String? id) => super.noSuchMethod(Invocation.method(
        #getHistoryMeta,
        [id],
      ));

  @override
  _i4.Future<void> setHistoryMeta(
    String? id,
    Map<String, dynamic>? historyMetaJson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHistoryMeta,
          [
            id,
            historyMetaJson,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteHistoryMeta(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteHistoryMeta,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<dynamic> getHistoryRequest(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getHistoryRequest,
          [id],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Future<void> setHistoryRequest(
    String? id,
    Map<String, dynamic>? historyRequestJsoon,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHistoryRequest,
          [
            id,
            historyRequestJsoon,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteHistoryRequest(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteHistoryRequest,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<dynamic> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Future<void> removeUnused() => (super.noSuchMethod(
        Invocation.method(
          #removeUnused,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
